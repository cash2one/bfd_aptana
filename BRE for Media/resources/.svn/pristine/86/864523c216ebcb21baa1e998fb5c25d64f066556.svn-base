/**
 * @author Administrator
 */
(function() {
    var _path = document.scripts;
    _path = _path[_path.length - 1].src.substring(0, _path[_path.length - 1].src.lastIndexOf("/") + 1);
    if((_path.indexOf('http') != 0 && _path.indexOf('/') != 0) || _path.indexOf('./') == 0) {
        _path = window.location.href.substring(0, window.location.href.lastIndexOf("/") + 1) + _path
    }

    window.BfdWidget = {}
    window.BaifendianWidgets = function(param) {
        var self = this,
            widgets = []
            self.widgets = {}
        self.init = function() {
            var commonLoads = [_path + 'config.js', _path + 'Widget.js', _path + 'format.js', _path + 'commons/date_tools.js']
            typeof(jQuery) == 'undefined' ? commonLoads.unshift(_path + 'commons/jquery.js') : null
            $LAB.script(commonLoads).wait().script(_path + 'commons/jquery.cookie.js').wait(_jqLoad)

            function _jqLoad() {
                $.ajaxSettings.traditional = true
                if(param instanceof Object) {
                    if(param.pageId){
                        $.each(param, function(k, v) {
                            self[k] = v
                        })
                        _getSetting().done(_parseSetting)
                    }else{
                        _parseSetting(param);
                    }
                } else {
                    param = {
                        pageId: param
                    }
                    _getSetting().done(_parseSetting)
                }
                
            }
        }
        self.getWidgetById = function(id) {
            return self.widgets[id]
        }
        var _getSetting = function() {
                return $.ajax({
                    url: _baifendianWidgetsComboSettingURL,
                    data: {
                        pageCode: param.pageId
                    },
                    dataType: 'json'
                })
            }
        var _parseSetting = function(data) {
            var $L = $LAB.sandbox()
            if(data.global.dateRange.type == "fix") {
                $L = $L.script(_path + "models/DateRange/js/daterangeselectbox.js")
            } else if(data.global.dateRange.type == "dynamic") {
                var link = document.createElement("link");
                link.setAttribute("rel", "stylesheet");
                link.setAttribute("type", "text/css");
                link.setAttribute("href", _path + "models/DateRange/css/datepicker.css");
                document.getElementsByTagName("head")[0].appendChild(link);
                $L = $L.script(_path + "models/DateRange/js/datarange.all.min.js")
            }
            $L.wait(function() {
                var dateRange
                if(data.global.dateRange.type == "fix") {
                    dateRange = new DateRange($('#' + data.global.dateRange['container']), data.global.dateRange['option'])
                } else {
                    dateRange = new DateRange($('#' + data.global.dateRange['container']), data.global.dateRange['isCompare'], data.global.dateRange['align'])
                }
                data.global.dateRange = dateRange;
                if(param.beforeWidgetRander) {
                    param.beforeWidgetRander(data)
                }
                var repeatScript = {};
                (function() {
                    var tempList = []
                    $.each(data.configs, function(i, item) {
                        tempList = tempList.concat(_baifendianWidgets[item.type]['requires'])
                        tempList.push('models/' + item.type + '/parse.js')
                    })
                    var tempHs = {}
                    $.each(tempList, function(i, item) {
                        if(tempHs[item] === undefined) {
                            tempHs[item] = 0;
                        } else {
                            tempHs[item]++;
                        }
                    })
                    for(var k in tempHs) {
                        if(tempHs[k] !== 0) {
                            repeatScript[k] = 0;
                        }
                    }
                })();

                function loadScript(slist, $l, callBack) {
                    if(slist.length === 0) {
                        callBack()
                    }
                    $.each(slist, function(i, item) {
                        if(repeatScript[item] !== undefined) {
                            if(repeatScript[item] === 0) {
                                repeatScript[item]++;
                                //                                        console.info(_path +item)
                                $l = $l.script(_path + item).wait(function() {
                                    repeatScript[item]++;
                                    if(i === slist.length - 1) {
                                        callBack()
                                    }
                                })
                            } else if(repeatScript[item] === 1) {
                                var interval = setInterval(function() {
                                    if(repeatScript[item] === 2) {
                                        clearInterval(interval)
                                        loadScript(slist.slice(i + 1), $l, callBack)
                                    }
                                }, 5)
                                return false
                            } else if(repeatScript[item] === 2) {
                                if(i === slist.length - 1) {
                                    callBack()
                                }
                            }
                        } else {
                            //                                   console.info(_path +item)
                            $l = $l.script(_path + item).wait(function() {
                                if(i === slist.length - 1) {
                                    callBack()
                                }
                            })
                        }
                    })
                }
                var requiresCSS = []
                $.each(data.configs, function(i, item) {
                    var $l = $LAB.sandbox()
                    var requires = _baifendianWidgets[item.type]['requires'] // .slice(0);
                    if($.inArray('models/' + item.type + '/parse.js', requires) < 0) {
                        requires.push('models/' + item.type + '/parse.js')
                    }
                    if(_baifendianWidgets[item.type]['css']) {
                        $.each(_baifendianWidgets[item.type]['css'], function(a, b) {
                            if($.inArray(b, requiresCSS) < 0) {
                                requiresCSS.push(b)
                                var link = document.createElement("link");
                                link.setAttribute("rel", "stylesheet");
                                link.setAttribute("type", "text/css");
                                link.setAttribute("href", _path + b);
                                document.getElementsByTagName("head")[0].appendChild(link);
                            }
                        })
                    }
                    /*
                     * $.each(requires,
                     * function(a,
                     * b) { $l =
                     * $l.script(_path +
                     * b).wait() })
                     */
                    loadScript(requires, $l, function() {
                        var widget = new BfdWidget[item.type](item, data.global)
                        self.widgets[item.id] = widget
                        if(item.events) {
                            $.each(item.events, function(i, item) {
                                widget[item.name](function() {
                                    self.widgets[item.target][item.action].apply(self.widgets[item.target], arguments)
                                })
                            })
                        }
                    })
                    /*  $l.wait(function() {
                 
                 })*/
                })
            })
        }
        self.init()
    }

})();